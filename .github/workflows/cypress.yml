name: Cypress tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  pr:
    name: Run Cypress tests - PR
    runs-on: self-hosted
    timeout-minutes: 30
    env:
      GO111MODULE: 'on'
      GOBIN: /home/runner/go/bin
      VEGA_VERSION: 'v0.57.0'
    steps:
      #######
      ## Setup langs
      #######
      - name: Set up Go
        uses: actions/setup-go@v3
        id: go
        with:
          go-version: 1.19

      - name: Set up Node 16
        uses: actions/setup-node@v2
        id: npm
        with:
          node-version: 16

      #######
      ## Install Yarn
      #######
      - name: Setup yarn
        run: npm install -g yarn

      #######
      ## Checkout repos
      #######

      # Checkout front ends
      - name: Checkout frontend mono repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: './frontend-monorepo'

      # Restore node_modules from cache if possible
      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: |
            frontend-monorepo/node_modules
            /home/runner/.cache/Cypress
          key: node_modules_cypress-${{ hashFiles('frontend-monorepo/yarn.lock') }}

      # Install frontend dependencies
      - name: Install root dependencies
        run: yarn install --frozen-lockfile
        working-directory: frontend-monorepo

      # Check SHAs
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          working-directory: frontend-monorepo
          main-branch-name: ${{ github.base_ref || github.ref_name }}
          set-environment-variables-for-job: true

      #######
      ## Install Vega wallet
      #######

      - name: Install Vega wallet binaries
        shell: bash
        run: |
          wget 'https://github.com/vegaprotocol/vega/releases/download/${{ env.VEGA_VERSION }}/vegawallet-linux-amd64.zip' -q
          unzip vegawallet-linux-amd64.zip -d ${{ env.GOBIN }}

      ######
      ## Setup a Vega wallet for our user
      ######

      - name: Set up Vegawallet
        uses: ./frontend-monorepo/.github/actions/setup-vegawallet
        with:
          recovery: ${{ secrets.TRADING_TEST_VEGA_WALLET_RECOVERY }}
          passphrase: ${{ secrets.CYPRESS_TRADING_TEST_VEGA_WALLET_PASSPHRASE }}
          capsule: false

      - name: Import fairground network
        shell: bash
        run: vegawallet network import --from-url="https://raw.githubusercontent.com/vegaprotocol/networks/master/fairground/fairground.toml" --force --home ~/.vegacapsule/testnet/wallet

      - name: Start service using fairground network
        shell: bash
        run: vegawallet service run --network fairground --automatic-consent --home ~/.vegacapsule/testnet/wallet &

      ######
      ## Run some tests
      ######

      # To make sure that all Cypress binaries are installed properly
      - name: Install cypress bins
        run: yarn cypress install
        working-directory: frontend-monorepo

      - name: Run Cypress tests
        run: npx nx affected:e2e --record --key ${{ secrets.CYPRESS_RECORD_KEY }} --env.grepTags='@smoke' --browser chrome --exclude=explorer,explorer-e2e,token,token-e2e
        working-directory: frontend-monorepo
        env:
          CYPRESS_TRADING_TEST_VEGA_WALLET_PASSPHRASE: ${{ secrets.CYPRESS_TRADING_TEST_VEGA_WALLET_PASSPHRASE }}
          CYPRESS_SLACK_WEBHOOK: ${{ secrets.CYPRESS_SLACK_WEBHOOK }}
          CYPRESS_ETH_WALLET_MNEMONIC: ${{ secrets.CYPRESS_ETH_WALLET_MNEMONIC }}
          CYPRESS_TEARDOWN_NETWORK_AFTER_FLOWS: true
